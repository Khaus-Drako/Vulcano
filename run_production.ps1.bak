# Script de despliegue para Windows
param(
    [switch]$Production
)

function Start-ProductionServer {
    Write-Host "Iniciando servidor de produccion..."
    
    # Verificar Waitress
    $waitressInstalled = pip list | Select-String -Pattern "waitress"
    
    if (-not $waitressInstalled) {
        Write-Host "Instalando Waitress..."
        pip install waitress
    }

    # Configurar entorno
    if (Test-Path ".env.production") {
        Write-Host "Copiando configuraci贸n de producci贸n..."
        Copy-Item .env.production .env -Force
    }

    # Configurar Oracle
    Write-Host "Configurando Oracle Database..."
    if (Test-Path "C:\oracle") {
        $env:TNS_ADMIN = "C:\oracle\network\admin"
        Write-Host "TNS_ADMIN configurado: $env:TNS_ADMIN"
    } else {
        Write-Host "ADVERTENCIA: Directorio Oracle no encontrado en C:\oracle" -ForegroundColor Yellow
        Write-Host "Por favor, verifica la instalaci贸n del cliente Oracle" -ForegroundColor Yellow
        $tnsPath = Read-Host "Introduce la ruta al directorio network/admin de Oracle (o presiona Enter para continuar)"
        if ($tnsPath) {
            $env:TNS_ADMIN = $tnsPath
        }
    }

    # Preparar entorno
    Write-Host "`nPreparando entorno de producci贸n..."
    python manage.py collectstatic --noinput
    python manage.py migrate
    python manage.py check --deploy

    # Crear directorio de logs
    if (-not (Test-Path "logs")) {
        New-Item -ItemType Directory -Path "logs"
    }

    $env:DJANGO_SETTINGS_MODULE = "webVulcano.settings"
    
    Write-Host "`nIniciando servidor de produccion con Waitress..."
    Write-Host "Servidor disponible en: http://127.0.0.1:8000"
    Write-Host "Presiona Ctrl+C para detener el servidor"
    Write-Host ""
    
    # Iniciar Waitress
    waitress-serve --port=8000 --threads=4 webVulcano.wsgi:application
}

if ($Production) {
    Start-ProductionServer
}