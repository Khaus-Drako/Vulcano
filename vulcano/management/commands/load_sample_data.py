"""
Management Command para cargar datos de ejemplo en Vulcano.
Crea usuarios, proyectos, im√°genes y mensajes de prueba.

Uso:
    python manage.py load_sample_data
    python manage.py load_sample_data --clear  # Limpia datos anteriores
"""

import os
import requests
from io import BytesIO
from datetime import datetime, timedelta
from django.core.management.base import BaseCommand, CommandError
from django.contrib.auth.models import User
from django.core.files.base import ContentFile
from django.db import transaction
from django.utils.text import slugify
from django.utils import timezone
from vulcano.models import UserProfile, Project, ProjectImage, Message
import random


class Command(BaseCommand):
    help = 'Carga datos de ejemplo para el proyecto Vulcano'
    
    def add_arguments(self, parser):
        parser.add_argument(
            '--clear',
            action='store_true',
            help='Elimina todos los datos existentes antes de cargar nuevos',
        )
        parser.add_argument(
            '--no-images',
            action='store_true',
            help='No descarga im√°genes reales (m√°s r√°pido para pruebas)',
        )
    
    def handle(self, *args, **options):
        self.stdout.write(self.style.SUCCESS('=' * 70))
        self.stdout.write(self.style.SUCCESS('  VULCANO - Carga de Datos de Ejemplo'))
        self.stdout.write(self.style.SUCCESS('=' * 70))
        
        if options['clear']:
            self.stdout.write(self.style.WARNING('üóëÔ∏è  Limpiando datos existentes...'))
            self.clear_data()
        
        self.download_images = not options['no_images']
        
        try:
            with transaction.atomic():
                self.stdout.write('üë• Creando usuarios...')
                users = self.create_users()
                
                self.stdout.write('üèóÔ∏è  Creando proyectos...')
                projects = self.create_projects(users)
                
                if self.download_images:
                    self.stdout.write('üì∏ Descargando y asociando im√°genes...')
                    self.create_project_images(projects)
                else:
                    self.stdout.write(self.style.WARNING('‚ö†Ô∏è  Omitiendo descarga de im√°genes'))
                
                self.stdout.write('üí¨ Creando mensajes...')
                self.create_messages(users, projects)
                
            self.stdout.write(self.style.SUCCESS('' + '=' * 70))
            self.stdout.write(self.style.SUCCESS('‚úÖ Datos de ejemplo cargados exitosamente'))
            self.stdout.write(self.style.SUCCESS('=' * 70))
            
            self.display_summary(users, projects)
            
        except Exception as e:
            raise CommandError(f'Error al cargar datos: {str(e)}')
    
    def clear_data(self):
        """Elimina todos los datos de prueba."""
        Message.objects.all().delete()
        ProjectImage.objects.all().delete()
        Project.objects.all().delete()
        UserProfile.objects.all().delete()
        User.objects.filter(is_superuser=False).delete()
        self.stdout.write(self.style.SUCCESS('   ‚úì Datos eliminados'))
    
    def create_users(self):
        """Crea usuarios de ejemplo con diferentes roles."""
        users = {}

        # Administrador
        admin_user, created = User.objects.get_or_create(
                username='admin',
                defaults={
                    'email': 'admin@ihman.com',
                    'first_name': 'Jhonny Juan',
                    'last_name': 'Rugel Guevara',
                    'is_staff': True,
                    'is_superuser': True,
                }
            )
        if created:
                admin_user.set_password('admin123')
                admin_user.save()

        profile, _ = UserProfile.objects.get_or_create(user=admin_user)
        profile.role = 'admin'
        profile.phone = '+51 997 937 653'
        profile.company = 'Ihman'
        profile.bio = 'Administrador principal de la plataforma Ihman.'
        profile.save()

        users['admin'] = admin_user
        self.stdout.write(f'   ‚úì Admin: {admin_user.username}')
        
        # Arquitectos
        arquitectos_data = [
            {
                'username': 'jhilariop',
                'email': 'Jhostyn.Hilario@ihman.com',
                'first_name': 'Jhostyn Alfredo',
                'last_name': 'Hilario Peves',
                'phone': '+51 941 016 940',
                'company': 'L√≥pez Arquitectos',
                'bio': 'Arquitecta especializada en dise√±o de interiores con m√°s de 5 a√±os de experiencia. Enfoque en sostenibilidad y espacios minimalistas.'
            },
        ]

        users['arquitectos'] = []

        for data in arquitectos_data:
            user, created = User.objects.get_or_create(
                username=data['username'],
                defaults={
                    'email': data['email'],
                    'first_name': data['first_name'],
                    'last_name': data['last_name'],
                }
            )

            if created:
                user.set_password('arquitecto123')
                user.save()

            # Evita duplicar perfiles (gracias a la se√±al post_save)
            profile, _ = UserProfile.objects.get_or_create(
                user=user,
                defaults={
                    'role': 'arquitecto',
                    'phone': data['phone'],
                    'company': data['company'],
                    'bio': data['bio']
                }
            )

            # Si ya exist√≠a, actualiza los campos por consistencia
            profile.role = 'arquitecto'
            profile.phone = data['phone']
            profile.company = data['company']
            profile.bio = data['bio']
            profile.save()

            users['arquitectos'].append(user)
            self.stdout.write(f'   ‚úì Arquitecto: {user.username}')
        
        # Clientes
        clientes_data = [
            {
                'username': 'cliente1',
                'email': 'roberto.garcia@email.com',
                'first_name': 'Roberto',
                'last_name': 'Garc√≠a P√©rez',
                'phone': '+52 55 5678 9012',
                'company': 'Inversiones RGP',
            },
            {
                'username': 'cliente2',
                'email': 'laura.mendez@empresa.com',
                'first_name': 'Laura',
                'last_name': 'M√©ndez Ortiz',
                'phone': '+52 55 6789 0123',
                'company': 'Constructora LMO',
            },
            {
                'username': 'cliente3',
                'email': 'carlos.rivera@inversiones.mx',
                'first_name': 'Carlos',
                'last_name': 'Rivera Dom√≠nguez',
                'phone': '+52 55 7890 1234',
                'company': 'Grupo Rivera',
            },
            {
                'username': 'cliente4',
                'email': 'sofia.morales@corporativo.com',
                'first_name': 'Sof√≠a',
                'last_name': 'Morales Castro',
                'phone': '+52 55 8901 2345',
                'company': 'Corporativo SMC',
            }
        ]

        users['clientes'] = []

        for data in clientes_data:
            user, created = User.objects.get_or_create(
                username=data['username'],
                defaults={
                    'email': data['email'],
                    'first_name': data['first_name'],
                    'last_name': data['last_name'],
                }
            )

            if created:
                user.set_password('cliente123')
                user.save()

            profile, _ = UserProfile.objects.get_or_create(
                user=user,
                defaults={
                    'role': 'cliente',
                    'phone': data['phone'],
                    'company': data['company'],
                    'bio': f'Cliente de Vulcano desde {random.randint(2020, 2024)}'
                }
            )

            # Actualiza datos si ya exist√≠a
            profile.role = 'cliente'
            profile.phone = data['phone']
            profile.company = data['company']
            profile.bio = f'Cliente de Vulcano desde {random.randint(2020, 2024)}'
            profile.save()

            users['clientes'].append(user)
            self.stdout.write(f'   ‚úì Cliente: {user.username}')

        return users
    
    def create_projects(self, users):
        """Crea proyectos de ejemplo."""
        projects = []
        
        proyectos_data = [
            {
                'title': 'Casa Minimalista Vista al Mar',
                'description': '''Proyecto residencial de lujo ubicado en la costa del Pac√≠fico. 
                
Dise√±o arquitect√≥nico contempor√°neo que integra espacios amplios y abiertos con una conexi√≥n directa con el entorno natural. La casa cuenta con grandes ventanales de piso a techo que maximizan las vistas panor√°micas al oc√©ano.

Caracter√≠sticas principales:
- Dise√±o bioclim√°tico con orientaci√≥n estrat√©gica
- Materiales locales y sostenibles (piedra volc√°nica, madera certificada)
- Sistema de captaci√≥n de agua pluvial
- Paneles solares integrados en la cubierta
- Terrazas escalonadas con jardines nativos
- Piscina infinity con borde visual hacia el mar
- Sistema de dom√≥tica avanzada

El proyecto busca un equilibrio perfecto entre modernidad, confort y respeto al medio ambiente, creando un espacio de vida √∫nico que celebra la arquitectura local contempor√°nea.''',
                'category': 'residential',
                'status': 'completed',
                'location': 'Puerto Vallarta, Jalisco, M√©xico',
                'area': 450.00,
                'budget': 12500000.00,
                'start_date': datetime(2022, 3, 15).date(),
                'end_date': datetime(2023, 8, 20).date(),
                'is_featured': True,
                'is_published': True,
            },
            {
                'title': 'Centro Cultural Metropolitano',
                'description': '''Complejo cultural de √∫ltima generaci√≥n dise√±ado para albergar m√∫ltiples disciplinas art√≠sticas y promover la interacci√≥n comunitaria.

El dise√±o arquitect√≥nico se caracteriza por:
- Fachada din√°mica con paneles m√≥viles que se adaptan a las condiciones clim√°ticas
- Salas de exposici√≥n modulares con iluminaci√≥n natural controlada
- Auditorio principal con capacidad para 800 personas
- Talleres y espacios de creaci√≥n colaborativa
- Biblioteca multimedia de acceso p√∫blico
- Plaza exterior con esculturas y √°reas de descanso
- Accesibilidad universal en todos los niveles

Este proyecto representa un hito en la arquitectura cultural contempor√°nea de M√©xico, combinando funcionalidad, est√©tica y compromiso social.''',
                'category': 'cultural',
                'status': 'in_progress',
                'location': 'Guadalajara, Jalisco, M√©xico',
                'area': 8500.00,
                'budget': 85000000.00,
                'start_date': datetime(2023, 6, 1).date(),
                'end_date': datetime(2025, 12, 31).date(),
                'is_featured': True,
                'is_published': True,
            },
            {
                'title': 'Edificio Corporativo Sustentable',
                'description': '''Torre de oficinas LEED Platinum con enfoque en sostenibilidad y bienestar laboral.

Caracter√≠sticas innovadoras:
- 18 pisos con certificaci√≥n ambiental m√°xima
- Fachada de doble piel con ventilaci√≥n natural
- Jardines verticales en cada nivel
- Sistema de recolecci√≥n y tratamiento de aguas grises
- Estacionamiento subterr√°neo con cargadores para veh√≠culos el√©ctricos
- Terrazas verdes con √°reas de descanso y huertos urbanos
- Iluminaci√≥n LED con sensores de presencia y luz natural
- Sistema HVAC de alta eficiencia energ√©tica

El edificio establece un nuevo est√°ndar en arquitectura comercial sostenible en Am√©rica Latina.''',
                'category': 'commercial',
                'status': 'in_progress',
                'location': 'Monterrey, Nuevo Le√≥n, M√©xico',
                'area': 15000.00,
                'budget': 120000000.00,
                'start_date': datetime(2023, 1, 10).date(),
                'end_date': datetime(2025, 6, 30).date(),
                'is_featured': True,
                'is_published': True,
            },
            {
                'title': 'Residencia Familiar Contempor√°nea',
                'description': '''Casa unifamiliar que reinterpreta la arquitectura tradicional mexicana con un lenguaje contempor√°neo.

Elementos destacados:
- Patio central como eje articulador de los espacios
- Muros de adobe revestidos con acabados modernos
- Celos√≠as de madera que regulan la entrada de luz
- Cocina integrada al comedor y sala familiar
- 4 rec√°maras con ba√±os completos
- Estudio con vista al jard√≠n
- Alberca natural con sistema de filtraci√≥n biol√≥gica
- Jard√≠n con especies nativas de bajo mantenimiento

Un proyecto que honra las ra√≠ces arquitect√≥nicas mexicanas mientras abraza la modernidad.''',
                'category': 'residential',
                'status': 'completed',
                'location': 'San Miguel de Allende, Guanajuato, M√©xico',
                'area': 380.00,
                'budget': 9500000.00,
                'start_date': datetime(2022, 9, 1).date(),
                'end_date': datetime(2023, 11, 15).date(),
                'is_featured': False,
                'is_published': True,
            },
            {
                'title': 'Hotel Boutique Ecotur√≠stico',
                'description': '''Desarrollo hotelero de bajo impacto ambiental integrado al paisaje selv√°tico de Chiapas.

Concepto y caracter√≠sticas:
- 24 suites independientes con dise√±o vern√°culo contempor√°neo
- Construcci√≥n con materiales locales (bamb√∫, madera, piedra)
- Techos verdes y sistemas de captaci√≥n pluvial
- Restaurante farm-to-table con huerto org√°nico propio
- Spa con tratamientos naturales
- Miradores hacia la selva y cascadas
- Senderos ecol√≥gicos se√±alizados
- Planta de tratamiento de aguas residuales
- Energ√≠a solar y e√≥lica

El proyecto busca un equilibrio entre confort tur√≠stico y preservaci√≥n ambiental.''',
                'category': 'hospitality',
                'status': 'in_progress',
                'location': 'Palenque, Chiapas, M√©xico',
                'area': 5200.00,
                'budget': 45000000.00,
                'start_date': datetime(2023, 9, 15).date(),
                'end_date': datetime(2025, 3, 30).date(),
                'is_featured': False,
                'is_published': True,
            },
            {
                'title': 'Escuela Primaria Modelo',
                'description': '''Centro educativo dise√±ado bajo principios pedag√≥gicos contempor√°neos y sostenibilidad ambiental.

Espacios educativos innovadores:
- 12 aulas flexibles con mobiliario adaptable
- Biblioteca multimedia interactiva
- Laboratorios de ciencias y tecnolog√≠a
- Talleres de artes y m√∫sica
- Gimnasio multiusos
- Patio central con √°reas verdes sombreadas
- Huerto escolar did√°ctico
- Sistema de captaci√≥n de agua pluvial para uso educativo
- Paneles solares visibles como elemento pedag√≥gico

Arquitectura que educa y inspira a las nuevas generaciones.''',
                'category': 'educational',
                'status': 'completed',
                'location': 'Quer√©taro, Quer√©taro, M√©xico',
                'area': 4500.00,
                'budget': 32000000.00,
                'start_date': datetime(2021, 8, 1).date(),
                'end_date': datetime(2023, 1, 20).date(),
                'is_featured': False,
                'is_published': True,
            },
            {
                'title': 'Restaurante de Autor',
                'description': '''Espacio gastron√≥mico que fusiona dise√±o interior vanguardista con cocina de alta gama.

Dise√±o interior:
- Concepto de cocina abierta como elemento esc√©nico central
- Iluminaci√≥n dise√±ada espec√≠ficamente para resaltar texturas y colores
- Materiales naturales: madera, piedra y cobre
- Mobiliario dise√±ado a medida
- Cava climatizada visible
- √Årea de terraza con jard√≠n vertical comestible
- Ac√∫stica optimizada para conversaci√≥n √≠ntima
- Paleta de colores terrosos y c√°lidos

Un proyecto que eleva la experiencia gastron√≥mica a trav√©s de la arquitectura interior.''',
                'category': 'interior',
                'status': 'completed',
                'location': 'Ciudad de M√©xico, CDMX, M√©xico',
                'area': 280.00,
                'budget': 4200000.00,
                'start_date': datetime(2023, 2, 1).date(),
                'end_date': datetime(2023, 7, 15).date(),
                'is_featured': False,
                'is_published': True,
            },
            {
                'title': 'Parque Urbano Lineal',
                'description': '''Proyecto de recuperaci√≥n de espacio p√∫blico que transforma un antiguo corredor ferroviario en un parque lineal de 2.5 km.

Elementos del dise√±o paisaj√≠stico:
- Ciclov√≠a y senderos peatonales accesibles
- √Åreas de descanso con p√©rgolas y mobiliario urbano
- Jardines tem√°ticos (jard√≠n de mariposas, jard√≠n sensorial, jard√≠n de lluvia)
- Plaza c√≠vica con foro al aire libre
- √Åreas de juegos infantiles inclusivos
- Zonas de ejercicio al aire libre
- Iluminaci√≥n LED con paneles solares
- Sistema de riego con agua tratada
- Se√±al√©tica educativa sobre flora nativa

Un pulm√≥n verde que reconecta a la comunidad con la naturaleza urbana.''',
                'category': 'landscape',
                'status': 'in_progress',
                'location': 'Puebla, Puebla, M√©xico',
                'area': 85000.00,
                'budget': 65000000.00,
                'start_date': datetime(2023, 5, 1).date(),
                'end_date': datetime(2025, 10, 30).date(),
                'is_featured': False,
                'is_published': True,
            },
            {
                'title': 'Cl√≠nica de Especialidades',
                'description': '''Instalaci√≥n m√©dica de √∫ltima generaci√≥n con enfoque humanista y tecnolog√≠a de punta.

Distribuci√≥n funcional:
- 8 consultorios especializados
- √Årea de diagn√≥stico con equipamiento avanzado
- Quir√≥fano menor para procedimientos ambulatorios
- Sala de recuperaci√≥n
- Farmacia integrada
- √Åreas de espera diferenciadas por especialidad
- Jard√≠n terap√©utico interior
- Estacionamiento con acceso directo para pacientes con movilidad reducida
- Sistema de aire purificado HEPA
- Iluminaci√≥n natural optimizada para reducir estr√©s

Arquitectura que promueve la sanaci√≥n y el bienestar integral.''',
                'category': 'healthcare',
                'status': 'completed',
                'location': 'Le√≥n, Guanajuato, M√©xico',
                'area': 1800.00,
                'budget': 18000000.00,
                'start_date': datetime(2022, 4, 1).date(),
                'end_date': datetime(2023, 3, 30).date(),
                'is_featured': False,
                'is_published': True,
            },
            {
                'title': 'Complejo Industrial Log√≠stico',
                'description': '''Centro de distribuci√≥n y almacenamiento de √∫ltima generaci√≥n con automatizaci√≥n integral.

Especificaciones t√©cnicas:
- 35,000 m¬≤ de √°rea de almacenaje
- Sistema de estanter√≠as de alta densidad
- Muelles de carga con niveladoras hidr√°ulicas
- Oficinas administrativas climatizadas
- √Årea de servicios para operadores
- Patio de maniobras para tractocamiones
- Sistema contra incendios automatizado
- Techumbre con aislamiento t√©rmico de alta eficiencia
- Iluminaci√≥n natural mediante domos transl√∫cidos
- Celdas solares en cubierta para autoconsumo

Infraestructura industrial que establece nuevos est√°ndares de eficiencia operativa.''',
                'category': 'industrial',
                'status': 'draft',
                'location': 'Silao, Guanajuato, M√©xico',
                'area': 35000.00,
                'budget': 95000000.00,
                'start_date': datetime(2024, 2, 1).date(),
                'end_date': datetime(2025, 8, 31).date(),
                'is_featured': False,
                'is_published': False,
            }
        ]
        
        for i, data in enumerate(proyectos_data):
            # Seleccionar arquitecto de manera rotativa
            arquitecto = users['arquitectos'][i % len(users['arquitectos'])]
            
            # Seleccionar clientes aleatorios
            num_clientes = random.randint(1, 3)
            clientes_seleccionados = random.sample(users['clientes'], num_clientes)
            
            project = Project.objects.create(
                title=data['title'],
                description=data['description'],
                category=data['category'],
                status=data['status'],
                location=data['location'],
                area=data['area'],
                budget=data['budget'],
                start_date=data['start_date'],
                end_date=data['end_date'],
                arquitecto=arquitecto,
                is_featured=data['is_featured'],
                is_published=data['is_published'],
                views_count=random.randint(50, 500)
            )
            
            # Asignar clientes
            project.clients.set(clientes_seleccionados)
            project.save()
            
            projects.append(project)
            self.stdout.write(f'   ‚úì Proyecto: {project.title[:50]}...')
        
        return projects
    
    def create_project_images(self, projects):
        """Descarga y asocia im√°genes a los proyectos."""
        
        # URLs de im√°genes de arquitectura de Unsplash (acceso directo)
        # Estas URLs son de la API de Unsplash con im√°genes relacionadas a arquitectura
        image_urls = [
            # Arquitectura residencial
            'https://images.unsplash.com/photo-1600596542815-ffad4c1539a9?w=1200',
            'https://images.unsplash.com/photo-1600607687939-ce8a6c25118c?w=1200',
            'https://images.unsplash.com/photo-1600585154340-be6161a56a0c?w=1200',
            'https://images.unsplash.com/photo-1600566753190-17f0baa2a6c3?w=1200',
            # Arquitectura moderna
            'https://images.unsplash.com/photo-1600607687644-c7171b42498b?w=1200',
            'https://images.unsplash.com/photo-1600607687920-4e2a09cf159d?w=1200',
            'https://images.unsplash.com/photo-1600607688066-890987a57781?w=1200',
            'https://images.unsplash.com/photo-1600566752355-35792bedcfea?w=1200',
            # Interiores
            'https://images.unsplash.com/photo-1600210492493-0946911123ea?w=1200',
            'https://images.unsplash.com/photo-1600210492486-724fe5c67fb0?w=1200',
            'https://images.unsplash.com/photo-1600210491369-e753d80a41f3?w=1200',
            'https://images.unsplash.com/photo-1600210491892-03d54c0aaf87?w=1200',
            # Comercial y corporativo
            'https://images.unsplash.com/photo-1486406146926-c627a92ad1ab?w=1200',
            'https://images.unsplash.com/photo-1497366216548-37526070297c?w=1200',
            'https://images.unsplash.com/photo-1497366754035-f200968a6e72?w=1200',
            'https://images.unsplash.com/photo-1497366412874-3415097a27e7?w=1200',
            # Espacios p√∫blicos
            'https://images.unsplash.com/photo-1545324418-cc1a3fa10c00?w=1200',
            'https://images.unsplash.com/photo-1558618666-fcd25c85cd64?w=1200',
            'https://images.unsplash.com/photo-1582407947304-fd86f028f716?w=1200',
            'https://images.unsplash.com/photo-1571055107559-3e67626fa8be?w=1200',
        ]
        
        for project in projects:
            # N√∫mero aleatorio de im√°genes por proyecto (3-5)
            num_images = random.randint(3, 5)
            
            # Seleccionar URLs aleatorias para este proyecto
            project_image_urls = random.sample(image_urls, min(num_images, len(image_urls)))
            
            for index, url in enumerate(project_image_urls):
                try:
                    # Descargar imagen
                    response = requests.get(url, timeout=10)
                    response.raise_for_status()
                    
                    # Crear nombre de archivo √∫nico
                    filename = f"{project.slug}_{index + 1}.jpg"
                    
                    # Crear objeto ProjectImage
                    project_image = ProjectImage(
                        project=project,
                        caption=f'Vista {index + 1} - {project.title}',
                        is_main=(index == 0),  # Primera imagen como principal
                        order=index
                    )
                    
                    # Guardar imagen descargada
                    project_image.image.save(
                        filename,
                        ContentFile(response.content),
                        save=True
                    )
                    
                    self.stdout.write(f'     ‚úì Imagen {index + 1}/{num_images} para: {project.title[:40]}...')
                    
                except requests.RequestException as e:
                    self.stdout.write(
                        self.style.WARNING(f'     ‚ö† Error descargando imagen para {project.title}: {str(e)}')
                    )
                except Exception as e:
                    self.stdout.write(
                        self.style.WARNING(f'     ‚ö† Error procesando imagen: {str(e)}')
                    )
    
    def create_messages(self, users, projects):
        """Crea mensajes de ejemplo entre usuarios."""
        messages_data = [
            {
                'sender': users['clientes'][0],
                'recipient': users['arquitectos'][0],
                'project': projects[0],
                'subject': 'Consulta sobre avances del proyecto',
                'body': 'Buen d√≠a Mar√≠a, me gustar√≠a saber el estado actual del proyecto y si podemos agendar una visita al sitio esta semana. Quedo atento a tus comentarios.'
            },
            {
                'sender': users['arquitectos'][0],
                'recipient': users['clientes'][0],
                'project': projects[0],
                'subject': 'RE: Consulta sobre avances del proyecto',
                'body': 'Hola Roberto, el proyecto va muy bien. Ya terminamos la estructura principal y estamos iniciando con los acabados. Podemos agendar la visita para el jueves a las 10 AM. Te enviar√© las √∫ltimas fotograf√≠as por separado.'
            },
            {
                'sender': users['clientes'][1],
                'recipient': users['arquitectos'][0],
                'project': projects[1],
                'subject': 'Modificaci√≥n en dise√±o de la fachada',
                'body': 'Juan, despu√©s de revisar los renders, nos gustar√≠a proponer algunos cambios en los materiales de la fachada. ¬øPodr√≠amos agendar una videollamada para discutir las opciones?'
            },
            {
                'sender': users['arquitectos'][0],
                'recipient': users['clientes'][1],
                'project': projects[1],
                'subject': 'RE: Modificaci√≥n en dise√±o de la fachada',
                'body': 'Por supuesto Laura, estar√© encantado de revisar las propuestas. Te env√≠o mi disponibilidad para esta semana. Tambi√©n preparar√© algunas alternativas de materiales que podr√≠an interesarte.'
            },
            {
                'sender': users['clientes'][2],
                'recipient': users['arquitectos'][0],
                'project': projects[2],
                'subject': 'Presupuesto adicional para certificaci√≥n LEED',
                'body': 'Ana, nos interesa obtener la certificaci√≥n LEED Platinum. ¬øPodr√≠as enviarnos un presupuesto detallado de los cambios necesarios y el cronograma actualizado?'
            },
            {
                'sender': users['admin'],
                'recipient': users['arquitectos'][0],
                'project': None,
                'subject': 'Bienvenida a la plataforma Vulcano',
                'body': 'Bienvenida Mar√≠a a Vulcano. Tu cuenta de arquitecto ha sido activada. Puedes comenzar a crear proyectos y gestionar tus clientes desde el dashboard. Si tienes alguna duda, estamos para ayudarte.'
            },
        ]
        
        for data in messages_data:
            Message.objects.create(
                sender=data['sender'],
                recipient=data['recipient'],
                project=data['project'],
                subject=data['subject'],
                body=data['body'],
                is_read=random.choice([True, False])
            )
            self.stdout.write(f'   ‚úì Mensaje: {data["subject"][:50]}...')
    
    def display_summary(self, users, projects):
        """Muestra un resumen de los datos creados."""
        self.stdout.write('üìä Resumen de datos creados:')
        self.stdout.write(f'   ‚Ä¢ Usuarios totales: {User.objects.count()}')
        self.stdout.write(f'     - Administradores: 1')
        self.stdout.write(f'     - Arquitectos: {len(users["arquitectos"])}')
        self.stdout.write(f'     - Clientes: {len(users["clientes"])}')
        self.stdout.write(f'   ‚Ä¢ Proyectos: {len(projects)}')
        self.stdout.write(f'   ‚Ä¢ Im√°genes: {ProjectImage.objects.count()}')
        self.stdout.write(f'   ‚Ä¢ Mensajes: {Message.objects.count()}')
        self.stdout.write('üîê Credenciales de acceso:')
        self.stdout.write('   Admin:')
        self.stdout.write('     Usuario: admin')
        self.stdout.write('     Contrase√±a: admin123')
        self.stdout.write('   Arquitectos:')
        self.stdout.write('     Usuario: arquitecto1, arquitecto2, arquitecto3')
        self.stdout.write('     Contrase√±a: arquitecto123')
        self.stdout.write('   Clientes:')
        self.stdout.write('     Usuario: cliente1, cliente2, cliente3, cliente4')
        self.stdout.write('     Contrase√±a: cliente123')
        self.stdout.write('üöÄ Accede a la plataforma en: http://127.0.0.1:8000/')